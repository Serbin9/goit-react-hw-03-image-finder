{"version":3,"sources":["components/Loader/Loader.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Searchbar/Searchbar.js","App.js","index.js"],"names":["LoaderPage","type","color","height","width","timeout","ImageGalleryItem","itemLi","onOpen","largeImageURL","className","src","webformatURL","alt","onClick","ImageGallery","galleryItems","map","item","key","id","Button","buttonMore","Modal","handleKeyDown","props","onClose","closeByClick","target","currentTarget","window","addEventListener","this","removeEventListener","url","Component","SearchBar","handleOnSubmit","handleChange","searchQuery","onSubmit","onChange","autoComplete","autoFocus","placeholder","value","KEY","App","state","isLoading","error","page","largeImageUrl","openModal","handleSubmit","e","setState","axios","get","then","data","prevState","hits","finally","a","preventDefault","setLargeImage","toggleModal","scrollTo","top","document","documentElement","scrollHeight","behavior","Loader","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.070e4ab1.chunk.js","sourcesContent":["import React from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n\r\nconst LoaderPage = () => (\r\n    <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000}\r\n          />\r\n);\r\n\r\nexport default LoaderPage;","import React from \"react\";\r\n\r\nconst ImageGalleryItem = ({ itemLi, largeImageURL, onOpen }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      src={itemLi.webformatURL}\r\n      alt=\"img\"\r\n      className=\"ImageGalleryItem-image\"\r\n      onClick={() => onOpen(itemLi.largeImageURL)}\r\n    />\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;","import React from \"react\";\r\nimport ImageGalleryItem from \"./../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ galleryItems, largeImageURL, onOpen }) => (\r\n  <>\r\n    <ul className=\"ImageGallery\">\r\n      {galleryItems.map(item => (\r\n        <ImageGalleryItem\r\n          itemLi={item}\r\n          key={item.id}\r\n          onOpen={onOpen}\r\n          largeImageURL={largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nexport default ImageGallery;","import React from \"react\";\r\n\r\nconst Button = ({ buttonMore }) => (\r\n  <button className=\"Button\" type=\"button\" onClick={buttonMore}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = ({ key }) => {\r\n    if (key === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  closeByClick = ({ target, currentTarget }) => {\r\n    // console.log(currentTarget);\r\n    // console.log(target);\r\n\r\n    if (target !== currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { url } = this.props;\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <div onClick={this.closeByClick} className=\"Modal\">\r\n          <img src={url} alt=\"img\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nconst SearchBar = ({ handleOnSubmit, handleChange, searchQuery }) => (\r\n  <header className=\"Searchbar\">\r\n    <form className=\"SearchForm\" onSubmit={handleOnSubmit}>\r\n      <button type=\"submit\" className=\"SearchForm-button\">\r\n        <span className=\"SearchForm-button-label\">Search</span>\r\n      </button>\r\n\r\n      <input\r\n        onChange={handleChange}\r\n        className=\"SearchForm-input\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        placeholder=\"Search images and photos\"\r\n        value={searchQuery}\r\n      />\r\n    </form>\r\n  </header>\r\n);\r\n\r\nexport default SearchBar;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport LoaderPage from \"./components/Loader/Loader\";\nimport axios from \"axios\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\nimport SearchBar from './components/Searchbar/Searchbar';\n\nconst KEY = \"15302072-a81be31270c5e4995077a81d4\";\n\nclass App extends Component {\n  state = {\n    galleryItems: [],\n    isLoading: false,\n    error: null,\n    searchQuery: \"\",\n    page: 1,\n    largeImageUrl: null,\n    openModal: false\n  };\n\n  handleSubmit = e => {\n    const { searchQuery, page } = this.state;\n    this.setState({ isLoading: true });\n    axios\n      .get(\n        `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\n      )\n      .then(data =>\n        this.setState(prevState => ({\n          galleryItems: [...prevState.galleryItems, ...data.data.hits]\n        }))\n      )\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  componentDidMount() {\n    this.handleSubmit();\n  }\n\n  handleOnSubmit = async e => {\n    e.preventDefault();\n    await this.setState({ galleryItems: [] });\n    await this.handleSubmit();\n  };\n\n  handleChange = e => {\n    this.setState({ searchQuery: e.target.value });\n  };\n\n  buttonMore = async () => {\n    await this.setState(prevState => ({ page: prevState.page + 1 }));\n    this.handleSubmit();\n  };\n  componentDidUpdate() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\"\n    });\n  }\n\n  setLargeImage = largeImageUrl => {\n    this.setState({ largeImageUrl: largeImageUrl });\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(state => ({ openModal: !state.openModal }));\n  };\n\n  render() {\n    const { isLoading, galleryItems, searchQuery } = this.state;\n    return (\n      <div className=\"App\">\n        <SearchBar\n          handleOnSubmit={this.handleOnSubmit}\n          handleChange={this.handleChange}\n          searchQuery={searchQuery}\n        />\n        {isLoading && <LoaderPage />}\n        <ImageGallery galleryItems={galleryItems} onOpen={this.setLargeImage} />\n        {this.state.openModal && (\n          <Modal url={this.state.largeImageUrl} onClose={this.toggleModal} />\n        )}\n        <Button buttonMore={this.buttonMore} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}